@model RBEPortal.Models.DisplayResourceModel

@{
    Page.Title = "Resource-Based Economy Portal - Resource";
}

<h2 style="margin-bottom: 10px;">@Model.Resource.Name</h2>

<div style="margin-bottom: 10px; vertical-align: top;">
    <h4>Description</h4>
    <p>@Html.Raw(Model.Resource.Description)</p>
</div>
@if (Request.IsAuthenticated) {
    <div style="margin-bottom: 20px; vertical-align: top;">
        <input type="button" name="buttonRequest" value="Request" class="button" style="min-width: 100px;" onclick="location.href='@Url.Action("NewRequest", "Home", new { resourceId = Model.Resource.ResourceId }, null)'" />
        <input type="button" name="buttonShare" value="Share" class="button" style="min-width: 100px;" onclick="location.href='@Url.Action("NewShare", "Home", new { resourceId = Model.Resource.ResourceId }, null)'" />
        <input type="button" name="buttonSponsor" value="Sponsor" class="button" style="min-width: 100px;" onclick="alert('This feature is not ready yet.');" />
    </div>
}
<div style="margin-bottom: 10px; vertical-align: top;">
    <div style="margin-bottom: 10px; vertical-align: top;">
        <h4>Requests</h4>
    </div>
    <div style="margin: 10px 0 20px 0; vertical-align: top;">
    @{
        if (Model != null && Model.Resource != null && Model.Resource.Requests != null && Model.Resource.Requests.Count > 0) {
            Html.Telerik().Grid(Model.Resource.Requests)
                .Name("Requests")
                .DataKeys(k => k.Add(c => c.RequestId))
                .Columns(c => {
                    c.Bound(b => b.RequestId).Hidden();
                    c.Bound(b => b.Location).Encoded(false);
                    c.Bound(b => b.Amount);
                    c.Bound(b => b.UoM).Title("Unit of measurement");
                    c.Bound(b => b.User.UserName).Title("Requested By");
                    c.Bound(b => b.ModifiedDate);
                    c.Bound(b => b.User.UserName).Title("").Template(t => {
                        if (Context.User.Identity.Name == t.User.UserName)
                            return Html.ActionLink("delete", "DeleteRequest", "Home", new { requestId = t.RequestId }, null);
                        return "";
                    });
                })
                .Render();
        } else {
            <h5>There are currently no requests for this resource.</h5>
        }
    }
    </div>
    <div style="margin-bottom: 10px; vertical-align: top;">
        <h4>Available at</h4>
    </div>
    <div style="margin: 10px 0 20px 0; vertical-align: top;">
    @{
        if (Model != null && Model.Resource != null && Model.Resource.Shares != null && Model.Resource.Shares.Count > 0) {
            Html.Telerik().Grid(Model.Resource.Shares)
                .Name("Shared")
                .DataKeys(k => k.Add(c => c.ShareId))
                .Columns(c => {
                    c.Bound(b => b.ShareId).Hidden();
                    c.Bound(b => b.Location).Encoded(false);
                    c.Bound(b => b.Amount);
                    c.Bound(b => b.UoM).Title("Unit of measurement");
                    c.Bound(b => b.User.UserName).Title("Shared By");
                    c.Bound(b => b.ModifiedDate);
                    c.Bound(b => b.User.UserName).Title("").Template(t => {
                        if (Context.User.Identity.Name == t.User.UserName)
                            return Html.ActionLink("delete", "DeleteShare", "Home", new { shareId = t.ShareId }, null);
                        return "";
                    });
                })
                .Render();
        } else {
            <h5>This resource is not currently available anywhere.</h5>
        }
    }
    </div>
    <div style="margin-bottom: 10px; vertical-align: top;">
        <h4>Sponsors</h4>
    </div>
    <div style="margin: 10px 0 20px 0; vertical-align: top;">
    @{
        if (Model != null && Model.Sponsors != null) {
            Html.Telerik().Grid(Model.Sponsors)
                .Name("Shared")
                .DataKeys(k => k.Add(c => c.ResourceId))
                .Columns(c => {
                    c.Bound(b => b.ResourceId).Hidden();
                    c.Bound(b => b.Name).Template(t => Html.ActionLink(t.Name, "DisplayResource", "Home", new { resourceId = t.ResourceId }, null));
                    c.Bound(b => b.Description).Encoded(false);
                    c.Bound(b => b.ModifiedByUser.UserName).Title("Last Modified By");
                    c.Bound(b => b.ModifiedDate);
                })
                .Render();
        } else {
            <h5>This resource is not currently sponsored.</h5>
        }
    }
    </div>
    @{
        if (Context.User.Identity.Name == Model.Resource.ModifiedByUser.UserName) {
            <div style="margin: 40px 0 20px 0; vertical-align: top;">
                <span>
                    @Html.ActionLink("Edit this resource", "EditResource", "Home", new { resourceId = Model.Resource.ResourceId }, null)
                    |
                    @Html.ActionLink("Delete this resource", "DeleteResource", "Home", new { resourceId = Model.Resource.ResourceId }, null)
                </span>
            </div>
        }
    }
</div>
