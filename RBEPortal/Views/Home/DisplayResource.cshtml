@model RBEPortal.Models.DisplayResourceModel

@{
    Page.Title = "Resource-Based Economy Portal - Resource";
}

<h2 style="margin-bottom: 10px;">@Model.Resource.Name</h2>

<div style="margin-bottom: 10px; vertical-align: top;">
    <h4>Description</h4>
    <p>@Html.Raw(Model.Resource.Description)</p>
</div>
<div style="margin-bottom: 20px; vertical-align: top;">
    <input type="button" name="buttonRequest" value="Request" class="button" style="min-width: 100px;" onclick="alert('This feature is not ready yet.');" />
    <input type="button" name="buttonShare" value="Share" class="button" style="min-width: 100px;" onclick="alert('This feature is not ready yet.');" />
    <input type="button" name="buttonSponsor" value="Sponsor" class="button" style="min-width: 100px;" onclick="alert('This feature is not ready yet.');" />
</div>
<div style="margin-bottom: 10px; vertical-align: top;">
    <div style="margin-bottom: 10px; vertical-align: top;">
        <h4>Requests</h4>
    </div>
    <div style="margin: 10px 0 20px 0; vertical-align: top;">
    @{
        if (Model != null && Model.Requests != null) {
            Html.Telerik().Grid(Model.Requests)
                .Name("Requests")
                .DataKeys(k => k.Add(c => c.ResourceId))
                .Columns(c => {
                    c.Bound(b => b.ResourceId).Hidden();
                    c.Bound(b => b.Name).Template(t => Html.ActionLink(t.Name, "DisplayResource", "Home", new { resourceId = t.ResourceId }, null));
                    c.Bound(b => b.Description).Encoded(false);
                    c.Bound(b => b.User.UserName).Title("Last Modified By");
                    c.Bound(b => b.ModifiedDate);
                })
                .Render();
        } else {
            <h5>There are currently no requests for this resource.</h5>
        }
    }
    </div>
    <div style="margin-bottom: 10px; vertical-align: top;">
        <h4>Locations</h4>
    </div>
    <div style="margin: 10px 0 20px 0; vertical-align: top;">
    @{
        if (Model != null && Model.Shared != null) {
            Html.Telerik().Grid(Model.Shared)
                .Name("Shared")
                .DataKeys(k => k.Add(c => c.ResourceId))
                .Columns(c => {
                    c.Bound(b => b.ResourceId).Hidden();
                    c.Bound(b => b.Name).Template(t => Html.ActionLink(t.Name, "DisplayResource", "Home", new { resourceId = t.ResourceId }, null));
                    c.Bound(b => b.Description).Encoded(false);
                    c.Bound(b => b.User.UserName).Title("Last Modified By");
                    c.Bound(b => b.ModifiedDate);
                })
                .Render();
        } else {
            <h5>This resource is not currently available anywhere.</h5>
        }
    }
    </div>
    <div style="margin-bottom: 10px; vertical-align: top;">
        <h4>Sponsors</h4>
    </div>
    <div style="margin: 10px 0 20px 0; vertical-align: top;">
    @{
        if (Model != null && Model.Sponsors != null) {
            Html.Telerik().Grid(Model.Sponsors)
                .Name("Shared")
                .DataKeys(k => k.Add(c => c.ResourceId))
                .Columns(c => {
                    c.Bound(b => b.ResourceId).Hidden();
                    c.Bound(b => b.Name).Template(t => Html.ActionLink(t.Name, "DisplayResource", "Home", new { resourceId = t.ResourceId }, null));
                    c.Bound(b => b.Description).Encoded(false);
                    c.Bound(b => b.User.UserName).Title("Last Modified By");
                    c.Bound(b => b.ModifiedDate);
                })
                .Render();
        } else {
            <h5>This resource is not currently sponsored.</h5>
        }
    }
    </div>
    <div style="margin: 40px 0 20px 0; vertical-align: top;">
        <span>
            @Html.ActionLink("Edit this resource", "EditResource", "Home", new { resourceId = Model.Resource.ResourceId }, null)
            |
            @Html.ActionLink("Delete this resource", "DeleteResource", "Home", new { resourceId = Model.Resource.ResourceId }, null)
        </span>
    </div>
</div>
